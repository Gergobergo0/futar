/*
 * realCity Query Server API
 * Specification for the realCity Query Server API.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DisplayedLeg;
import org.openapitools.client.model.Leg;
import org.openapitools.client.model.PatternStatistics;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Itinerary
 */
public class ItineraryTest {
    private final Itinerary model = new Itinerary();

    /**
     * Model tests for Itinerary
     */
    @Test
    public void testItinerary() {
        // TODO: test Itinerary
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'walkTime'
     */
    @Test
    public void walkTimeTest() {
        // TODO: test walkTime
    }

    /**
     * Test the property 'bikeTime'
     */
    @Test
    public void bikeTimeTest() {
        // TODO: test bikeTime
    }

    /**
     * Test the property 'transitTime'
     */
    @Test
    public void transitTimeTest() {
        // TODO: test transitTime
    }

    /**
     * Test the property 'waitingTime'
     */
    @Test
    public void waitingTimeTest() {
        // TODO: test waitingTime
    }

    /**
     * Test the property 'bikeDistance'
     */
    @Test
    public void bikeDistanceTest() {
        // TODO: test bikeDistance
    }

    /**
     * Test the property 'walkDistance'
     */
    @Test
    public void walkDistanceTest() {
        // TODO: test walkDistance
    }

    /**
     * Test the property 'walkLimitExceeded'
     */
    @Test
    public void walkLimitExceededTest() {
        // TODO: test walkLimitExceeded
    }

    /**
     * Test the property 'notAllTicketsAvailable'
     */
    @Test
    public void notAllTicketsAvailableTest() {
        // TODO: test notAllTicketsAvailable
    }

    /**
     * Test the property 'bikeCategoryDistances'
     */
    @Test
    public void bikeCategoryDistancesTest() {
        // TODO: test bikeCategoryDistances
    }

    /**
     * Test the property 'elevationLost'
     */
    @Test
    public void elevationLostTest() {
        // TODO: test elevationLost
    }

    /**
     * Test the property 'elevationGained'
     */
    @Test
    public void elevationGainedTest() {
        // TODO: test elevationGained
    }

    /**
     * Test the property 'transfers'
     */
    @Test
    public void transfersTest() {
        // TODO: test transfers
    }

    /**
     * Test the property 'generalizedCost'
     */
    @Test
    public void generalizedCostTest() {
        // TODO: test generalizedCost
    }

    /**
     * Test the property 'waitTimeAdjustedGeneralizedCost'
     */
    @Test
    public void waitTimeAdjustedGeneralizedCostTest() {
        // TODO: test waitTimeAdjustedGeneralizedCost
    }

    /**
     * Test the property 'legs'
     */
    @Test
    public void legsTest() {
        // TODO: test legs
    }

    /**
     * Test the property 'displayedLegs'
     */
    @Test
    public void displayedLegsTest() {
        // TODO: test displayedLegs
    }

    /**
     * Test the property 'tooSloped'
     */
    @Test
    public void tooSlopedTest() {
        // TODO: test tooSloped
    }

    /**
     * Test the property 'patternItineraries'
     */
    @Test
    public void patternItinerariesTest() {
        // TODO: test patternItineraries
    }

    /**
     * Test the property 'patternFrequency'
     */
    @Test
    public void patternFrequencyTest() {
        // TODO: test patternFrequency
    }

    /**
     * Test the property 'patternDuration'
     */
    @Test
    public void patternDurationTest() {
        // TODO: test patternDuration
    }

    /**
     * Test the property 'displayProductRecommendation'
     */
    @Test
    public void displayProductRecommendationTest() {
        // TODO: test displayProductRecommendation
    }

}
