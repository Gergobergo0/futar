/*
 * realCity Query Server API
 * Specification for the realCity Query Server API.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TransitStopStyle;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TransitStop
 */
public class TransitStopTest {
    private final TransitStop model = new TransitStop();

    /**
     * Model tests for TransitStop
     */
    @Test
    public void testTransitStop() {
        // TODO: test TransitStop
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'vertex'
     */
    @Test
    public void vertexTest() {
        // TODO: test vertex
    }

    /**
     * Test the property 'lat'
     */
    @Test
    public void latTest() {
        // TODO: test lat
    }

    /**
     * Test the property 'lon'
     */
    @Test
    public void lonTest() {
        // TODO: test lon
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'direction'
     */
    @Test
    public void directionTest() {
        // TODO: test direction
    }

    /**
     * Test the property 'platformCode'
     */
    @Test
    public void platformCodeTest() {
        // TODO: test platformCode
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'locationType'
     */
    @Test
    public void locationTypeTest() {
        // TODO: test locationType
    }

    /**
     * Test the property 'locationSubType'
     */
    @Test
    public void locationSubTypeTest() {
        // TODO: test locationSubType
    }

    /**
     * Test the property 'parentStationId'
     */
    @Test
    public void parentStationIdTest() {
        // TODO: test parentStationId
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'wheelchairBoarding'
     */
    @Test
    public void wheelchairBoardingTest() {
        // TODO: test wheelchairBoarding
    }

    /**
     * Test the property 'routeIds'
     */
    @Test
    public void routeIdsTest() {
        // TODO: test routeIds
    }

    /**
     * Test the property 'stopColorType'
     */
    @Test
    public void stopColorTypeTest() {
        // TODO: test stopColorType
    }

    /**
     * Test the property 'alertIds'
     */
    @Test
    public void alertIdsTest() {
        // TODO: test alertIds
    }

    /**
     * Test the property 'style'
     */
    @Test
    public void styleTest() {
        // TODO: test style
    }

}
