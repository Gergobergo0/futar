/*
 * realCity Query Server API
 * Specification for the realCity Query Server API.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TransitAlertRoute;
import org.openapitools.client.model.TranslatedString;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Zavarok referenciáinak listája.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-15T15:47:41.658152+02:00[Europe/Budapest]", comments = "Generator version: 7.12.0")
public class TransitAlert {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_START = "start";
  @SerializedName(SERIALIZED_NAME_START)
  @javax.annotation.Nullable
  private Long start;

  public static final String SERIALIZED_NAME_END = "end";
  @SerializedName(SERIALIZED_NAME_END)
  @javax.annotation.Nullable
  private Long end;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  @javax.annotation.Nullable
  private Long timestamp;

  public static final String SERIALIZED_NAME_MODIFIED_TIME = "modifiedTime";
  @SerializedName(SERIALIZED_NAME_MODIFIED_TIME)
  @javax.annotation.Nullable
  private Long modifiedTime;

  public static final String SERIALIZED_NAME_STOP_IDS = "stopIds";
  @SerializedName(SERIALIZED_NAME_STOP_IDS)
  @javax.annotation.Nullable
  private List<String> stopIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_ROUTE_IDS = "routeIds";
  @SerializedName(SERIALIZED_NAME_ROUTE_IDS)
  @javax.annotation.Nullable
  private List<String> routeIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  @javax.annotation.Nullable
  private TranslatedString url;

  public static final String SERIALIZED_NAME_HEADER = "header";
  @SerializedName(SERIALIZED_NAME_HEADER)
  @javax.annotation.Nullable
  private TranslatedString header;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private TranslatedString description;

  public static final String SERIALIZED_NAME_DISABLE_APP = "disableApp";
  @SerializedName(SERIALIZED_NAME_DISABLE_APP)
  @javax.annotation.Nullable
  private Boolean disableApp;

  public static final String SERIALIZED_NAME_START_TEXT = "startText";
  @SerializedName(SERIALIZED_NAME_START_TEXT)
  @javax.annotation.Nullable
  private TranslatedString startText;

  public static final String SERIALIZED_NAME_END_TEXT = "endText";
  @SerializedName(SERIALIZED_NAME_END_TEXT)
  @javax.annotation.Nullable
  private TranslatedString endText;

  public static final String SERIALIZED_NAME_ROUTES = "routes";
  @SerializedName(SERIALIZED_NAME_ROUTES)
  @javax.annotation.Nullable
  private List<TransitAlertRoute> routes = new ArrayList<>();

  public TransitAlert() {
  }

  public TransitAlert id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * A zavar azonosítója.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public TransitAlert start(@javax.annotation.Nullable Long start) {
    this.start = start;
    return this;
  }

  /**
   * A zavar kezdő időpontja másodpercben.
   * @return start
   */
  @javax.annotation.Nullable
  public Long getStart() {
    return start;
  }

  public void setStart(@javax.annotation.Nullable Long start) {
    this.start = start;
  }


  public TransitAlert end(@javax.annotation.Nullable Long end) {
    this.end = end;
    return this;
  }

  /**
   * A zavar végének időpontja másodpercben.
   * @return end
   */
  @javax.annotation.Nullable
  public Long getEnd() {
    return end;
  }

  public void setEnd(@javax.annotation.Nullable Long end) {
    this.end = end;
  }


  public TransitAlert timestamp(@javax.annotation.Nullable Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * A zavar időbélyege másodpercben.
   * @return timestamp
   */
  @javax.annotation.Nullable
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(@javax.annotation.Nullable Long timestamp) {
    this.timestamp = timestamp;
  }


  public TransitAlert modifiedTime(@javax.annotation.Nullable Long modifiedTime) {
    this.modifiedTime = modifiedTime;
    return this;
  }

  /**
   * A zavar utolsó módosításának időpontja másodpercben.
   * @return modifiedTime
   */
  @javax.annotation.Nullable
  public Long getModifiedTime() {
    return modifiedTime;
  }

  public void setModifiedTime(@javax.annotation.Nullable Long modifiedTime) {
    this.modifiedTime = modifiedTime;
  }


  public TransitAlert stopIds(@javax.annotation.Nullable List<String> stopIds) {
    this.stopIds = stopIds;
    return this;
  }

  public TransitAlert addStopIdsItem(String stopIdsItem) {
    if (this.stopIds == null) {
      this.stopIds = new ArrayList<>();
    }
    this.stopIds.add(stopIdsItem);
    return this;
  }

  /**
   * A zavar által érintett megállók azonosítóinak listája.
   * @return stopIds
   */
  @javax.annotation.Nullable
  public List<String> getStopIds() {
    return stopIds;
  }

  public void setStopIds(@javax.annotation.Nullable List<String> stopIds) {
    this.stopIds = stopIds;
  }


  public TransitAlert routeIds(@javax.annotation.Nullable List<String> routeIds) {
    this.routeIds = routeIds;
    return this;
  }

  public TransitAlert addRouteIdsItem(String routeIdsItem) {
    if (this.routeIds == null) {
      this.routeIds = new ArrayList<>();
    }
    this.routeIds.add(routeIdsItem);
    return this;
  }

  /**
   * A zavar által érintett járatok azonosítóinak listája.
   * @return routeIds
   */
  @javax.annotation.Nullable
  public List<String> getRouteIds() {
    return routeIds;
  }

  public void setRouteIds(@javax.annotation.Nullable List<String> routeIds) {
    this.routeIds = routeIds;
  }


  public TransitAlert url(@javax.annotation.Nullable TranslatedString url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public TranslatedString getUrl() {
    return url;
  }

  public void setUrl(@javax.annotation.Nullable TranslatedString url) {
    this.url = url;
  }


  public TransitAlert header(@javax.annotation.Nullable TranslatedString header) {
    this.header = header;
    return this;
  }

  /**
   * Get header
   * @return header
   */
  @javax.annotation.Nullable
  public TranslatedString getHeader() {
    return header;
  }

  public void setHeader(@javax.annotation.Nullable TranslatedString header) {
    this.header = header;
  }


  public TransitAlert description(@javax.annotation.Nullable TranslatedString description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public TranslatedString getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable TranslatedString description) {
    this.description = description;
  }


  public TransitAlert disableApp(@javax.annotation.Nullable Boolean disableApp) {
    this.disableApp = disableApp;
    return this;
  }

  /**
   * A zavar hatására használhatatlan lesz-e az alkalmazás.
   * @return disableApp
   */
  @javax.annotation.Nullable
  public Boolean getDisableApp() {
    return disableApp;
  }

  public void setDisableApp(@javax.annotation.Nullable Boolean disableApp) {
    this.disableApp = disableApp;
  }


  public TransitAlert startText(@javax.annotation.Nullable TranslatedString startText) {
    this.startText = startText;
    return this;
  }

  /**
   * Get startText
   * @return startText
   */
  @javax.annotation.Nullable
  public TranslatedString getStartText() {
    return startText;
  }

  public void setStartText(@javax.annotation.Nullable TranslatedString startText) {
    this.startText = startText;
  }


  public TransitAlert endText(@javax.annotation.Nullable TranslatedString endText) {
    this.endText = endText;
    return this;
  }

  /**
   * Get endText
   * @return endText
   */
  @javax.annotation.Nullable
  public TranslatedString getEndText() {
    return endText;
  }

  public void setEndText(@javax.annotation.Nullable TranslatedString endText) {
    this.endText = endText;
  }


  public TransitAlert routes(@javax.annotation.Nullable List<TransitAlertRoute> routes) {
    this.routes = routes;
    return this;
  }

  public TransitAlert addRoutesItem(TransitAlertRoute routesItem) {
    if (this.routes == null) {
      this.routes = new ArrayList<>();
    }
    this.routes.add(routesItem);
    return this;
  }

  /**
   * A zavar által érintett járatok listája.
   * @return routes
   */
  @javax.annotation.Nullable
  public List<TransitAlertRoute> getRoutes() {
    return routes;
  }

  public void setRoutes(@javax.annotation.Nullable List<TransitAlertRoute> routes) {
    this.routes = routes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransitAlert transitAlert = (TransitAlert) o;
    return Objects.equals(this.id, transitAlert.id) &&
        Objects.equals(this.start, transitAlert.start) &&
        Objects.equals(this.end, transitAlert.end) &&
        Objects.equals(this.timestamp, transitAlert.timestamp) &&
        Objects.equals(this.modifiedTime, transitAlert.modifiedTime) &&
        Objects.equals(this.stopIds, transitAlert.stopIds) &&
        Objects.equals(this.routeIds, transitAlert.routeIds) &&
        Objects.equals(this.url, transitAlert.url) &&
        Objects.equals(this.header, transitAlert.header) &&
        Objects.equals(this.description, transitAlert.description) &&
        Objects.equals(this.disableApp, transitAlert.disableApp) &&
        Objects.equals(this.startText, transitAlert.startText) &&
        Objects.equals(this.endText, transitAlert.endText) &&
        Objects.equals(this.routes, transitAlert.routes);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, start, end, timestamp, modifiedTime, stopIds, routeIds, url, header, description, disableApp, startText, endText, routes);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransitAlert {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    modifiedTime: ").append(toIndentedString(modifiedTime)).append("\n");
    sb.append("    stopIds: ").append(toIndentedString(stopIds)).append("\n");
    sb.append("    routeIds: ").append(toIndentedString(routeIds)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disableApp: ").append(toIndentedString(disableApp)).append("\n");
    sb.append("    startText: ").append(toIndentedString(startText)).append("\n");
    sb.append("    endText: ").append(toIndentedString(endText)).append("\n");
    sb.append("    routes: ").append(toIndentedString(routes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("start");
    openapiFields.add("end");
    openapiFields.add("timestamp");
    openapiFields.add("modifiedTime");
    openapiFields.add("stopIds");
    openapiFields.add("routeIds");
    openapiFields.add("url");
    openapiFields.add("header");
    openapiFields.add("description");
    openapiFields.add("disableApp");
    openapiFields.add("startText");
    openapiFields.add("endText");
    openapiFields.add("routes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TransitAlert
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    /*
    if (jsonElement == null) {
        if (!TransitAlert.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TransitAlert is not found in the empty JSON string", TransitAlert.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TransitAlert.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TransitAlert` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("stopIds") != null && !jsonObj.get("stopIds").isJsonNull() && !jsonObj.get("stopIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `stopIds` to be an array in the JSON string but got `%s`", jsonObj.get("stopIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("routeIds") != null && !jsonObj.get("routeIds").isJsonNull() && !jsonObj.get("routeIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `routeIds` to be an array in the JSON string but got `%s`", jsonObj.get("routeIds").toString()));
      }
      // validate the optional field `url`
      if (jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) {
        TranslatedString.validateJsonElement(jsonObj.get("url"));
      }
      // validate the optional field `header`
      if (jsonObj.get("header") != null && !jsonObj.get("header").isJsonNull()) {
        TranslatedString.validateJsonElement(jsonObj.get("header"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        TranslatedString.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `startText`
      if (jsonObj.get("startText") != null && !jsonObj.get("startText").isJsonNull()) {
        TranslatedString.validateJsonElement(jsonObj.get("startText"));
      }
      // validate the optional field `endText`
      if (jsonObj.get("endText") != null && !jsonObj.get("endText").isJsonNull()) {
        TranslatedString.validateJsonElement(jsonObj.get("endText"));
      }
      if (jsonObj.get("routes") != null && !jsonObj.get("routes").isJsonNull()) {
        JsonArray jsonArrayroutes = jsonObj.getAsJsonArray("routes");
        if (jsonArrayroutes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("routes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `routes` to be an array in the JSON string but got `%s`", jsonObj.get("routes").toString()));
          }

          // validate the optional field `routes` (array)
          for (int i = 0; i < jsonArrayroutes.size(); i++) {
            TransitAlertRoute.validateJsonElement(jsonArrayroutes.get(i));
          };
        }
      }*/
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TransitAlert.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TransitAlert' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TransitAlert> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TransitAlert.class));

       return (TypeAdapter<T>) new TypeAdapter<TransitAlert>() {
           @Override
           public void write(JsonWriter out, TransitAlert value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TransitAlert read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TransitAlert given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TransitAlert
   * @throws IOException if the JSON string is invalid with respect to TransitAlert
   */
  public static TransitAlert fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TransitAlert.class);
  }

  /**
   * Convert an instance of TransitAlert to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

