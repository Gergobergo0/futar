/*
 * realCity Query Server API
 * Specification for the realCity Query Server API.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * A válasz státusza.
 */
@JsonAdapter(Status.Adapter.class)
public enum Status {
  
  NOT_MODIFIED("NOT_MODIFIED"),
  
  OK("OK"),
  
  UNKNOWN_ERROR("UNKNOWN_ERROR"),
  
  NOT_FOUND("NOT_FOUND"),
  
  INVALID_VALUE("INVALID_VALUE"),
  
  NOT_OPERATING("NOT_OPERATING"),
  
  OUTSIDE_BOUNDS("OUTSIDE_BOUNDS"),
  
  PATH_NOT_FOUND("PATH_NOT_FOUND"),
  
  NO_TRANSIT_TIMES("NO_TRANSIT_TIMES"),
  
  REQUEST_TIMEOUT("REQUEST_TIMEOUT"),
  
  BOGUS_PARAMETER("BOGUS_PARAMETER"),
  
  TOO_CLOSE("TOO_CLOSE"),
  
  LOCATION_NOT_ACCESSIBLE("LOCATION_NOT_ACCESSIBLE"),
  
  MISSING_MODE("MISSING_MODE"),
  
  ERROR_NO_GRAPH("ERROR_NO_GRAPH"),
  
  PLANNER_SERVICE_UNAVAILABLE("PLANNER_SERVICE_UNAVAILABLE"),
  
  ERROR_VEHICLE_LOCATION_SERVICE("ERROR_VEHICLE_LOCATION_SERVICE"),
  
  ERROR_BIKE_RENTAL_SERVICE("ERROR_BIKE_RENTAL_SERVICE"),
  
  ERROR_TICKETING_SERVICE("ERROR_TICKETING_SERVICE"),
  
  ERROR_TRANSIT_INDEX_SERVICE("ERROR_TRANSIT_INDEX_SERVICE"),
  
  MOVED_TEMPORARILY("MOVED_TEMPORARILY");

  private String value;

  Status(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Status fromValue(String value) {
    for (Status b : Status.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Status> {
    @Override
    public void write(final JsonWriter jsonWriter, final Status enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Status read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Status.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    Status.fromValue(value);
  }
}

