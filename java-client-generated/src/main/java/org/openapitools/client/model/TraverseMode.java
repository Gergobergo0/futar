/*
 * realCity Query Server API
 * Specification for the realCity Query Server API.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets TraverseMode
 */
@JsonAdapter(TraverseMode.Adapter.class)
public enum TraverseMode {
  
  WALK("WALK"),
  
  BICYCLE("BICYCLE"),
  
  CAR("CAR"),
  
  TRAM("TRAM"),
  
  SUBWAY("SUBWAY"),
  
  RAIL("RAIL"),
  
  BUS("BUS"),
  
  FERRY("FERRY"),
  
  CABLE_CAR("CABLE_CAR"),
  
  GONDOLA("GONDOLA"),
  
  FUNICULAR("FUNICULAR"),
  
  TRANSIT("TRANSIT"),
  
  AIRPLANE("AIRPLANE"),
  
  TROLLEYBUS("TROLLEYBUS"),
  
  MONORAIL("MONORAIL"),
  
  SUBURBAN_RAILWAY("SUBURBAN_RAILWAY"),
  
  COACH("COACH");

  private String value;

  TraverseMode(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TraverseMode fromValue(String value) {
    for (TraverseMode b : TraverseMode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TraverseMode> {
    @Override
    public void write(final JsonWriter jsonWriter, final TraverseMode enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TraverseMode read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TraverseMode.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    TraverseMode.fromValue(value);
  }
}

